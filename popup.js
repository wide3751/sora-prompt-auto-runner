// ========== ÊúÉË¢´Ê≥®ÂÖ•ÁöÑÂáΩÂºèÂÄë ==========

// Ê≥®ÂÖ•Âà∞È†ÅÈù¢ÁöÑ RunnerÔºåÊúÉËá™Âãï‰æùÂ∫èÈÄÅÂá∫ prompts
function injectedRunner(prompts, TEXTAREA_XPATH, SUBMIT_BUTTON_XPATH, verbose) {
  function getElementByXPath(path) {
    try {
      return document.evaluate(path, document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue || null;
    } catch (e) {
      console.error("XPath ÈåØË™§Ôºö", path, e);
      return null;
    }
  }

  function setNativeValue(element, value) {
    const valueSetter = Object.getOwnPropertyDescriptor(element, "value")?.set;
    const prototype = Object.getPrototypeOf(element);
    const prototypeValueSetter = Object.getOwnPropertyDescriptor(prototype, "value")?.set;

    if (!valueSetter || !prototypeValueSetter) {
      element.value = value;
    } else if (valueSetter !== prototypeValueSetter) {
      prototypeValueSetter.call(element, value);
    } else {
      valueSetter.call(element, value);
    }

    element.dispatchEvent(new Event("input", { bubbles: true }));
    element.dispatchEvent(new Event("change", { bubbles: true }));
  }

  const log = (...args) => verbose && console.log("[SoraPromptAutoRunner]", ...args);

  if (window.__promptAutomationInterval) {
    clearInterval(window.__promptAutomationInterval);
    window.__promptAutomationInterval = null;
  }
  window.__promptAutomationState = { index: 0, waitingClear: false };

  log("‚úÖ Ëá™ÂãïÂåñËÖ≥Êú¨ÂïüÂãï");
  log(`ÂÖ±Êúâ ${prompts.length} ÂÄãÊèêÁ§∫Ë©û`);

  window.__promptAutomationInterval = setInterval(() => {
    const state = window.__promptAutomationState;

    if (state.index >= prompts.length) {
      log("üéâ ÂÖ®ÈÉ®ÊèêÁ§∫Ë©ûÂ∑≤ÈÄÅÂá∫ÔºåÂÅúÊ≠¢„ÄÇ");
      clearInterval(window.__promptAutomationInterval);
      window.__promptAutomationInterval = null;
      return;
    }

    const textarea = getElementByXPath(TEXTAREA_XPATH);
    const submitButton = getElementByXPath(SUBMIT_BUTTON_XPATH);

    if (!textarea || !submitButton) {
      console.error("‚ùå Êâæ‰∏çÂà∞ textarea Êàñ submit buttonÔºåË´ãÊ™¢Êü• XPath„ÄÇÂÅúÊ≠¢„ÄÇ");
      clearInterval(window.__promptAutomationInterval);
      window.__promptAutomationInterval = null;
      return;
    }

    const isTextareaEmpty = (textarea.value ?? "").trim() === "";

    if (state.waitingClear) {
      if (isTextareaEmpty) {
        log(`‚úÖ Á¨¨ ${state.index + 1} ÂÄãÊèêÁ§∫Ë©ûÈÄÅÂá∫ÊàêÂäüÔºåËº∏ÂÖ•Ê°ÜÂ∑≤Ê∏ÖÁ©∫„ÄÇ`);
        state.index++;
        state.waitingClear = false;
      } else {
        log(`‚è≥ Á≠âÂæÖÊ∏ÖÁ©∫‰∏≠... ÂÜçÈªû‰∏ÄÊ¨°ÈÄÅÂá∫‰ª•Èò≤ÊºèËß∏Áôº`);
        submitButton.click();
      }
    } else {
      if (isTextareaEmpty) {
        const promptToSubmit = prompts[state.index];
        log(`üöÄ Ê∫ñÂÇôÈÄÅÂá∫Á¨¨ ${state.index + 1}/${prompts.length} ÂÄãÊèêÁ§∫Ë©û`);
        try {
            if (typeof promptToSubmit === "string") {
              setNativeValue(textarea, promptToSubmit);
            } else {
              setNativeValue(textarea, JSON.stringify(promptToSubmit, null, 2));
            }
        } catch (e) {
          console.error("‚ùå ÁÑ°Ê≥ïÂ∫èÂàóÂåñÊàñÂØ´ÂÖ• promptÔºö", e, promptToSubmit);
          clearInterval(window.__promptAutomationInterval);
          window.__promptAutomationInterval = null;
          return;
        }
        setTimeout(() => {
          submitButton.click();
          log("üñ±Ô∏è Â∑≤ÈªûÊìäÈÄÅÂá∫");
          state.waitingClear = true;
        }, 500);
      } else {
        log("‚ö†Ô∏è Ëº∏ÂÖ•Ê°ÜÈùûÁ©∫‰∏îÊú™Âú®Á≠âÂæÖÊ∏ÖÁ©∫ÔºõÁ≠âÂæÖÊâãÂãïÊ∏ÖÁ©∫ÊàñÁ∂≤Á´ôËôïÁêÜÂÆåÊàê„ÄÇ");
      }
    }
  }, 2000);
}

// ÂÅúÊ≠¢‰ªªÂãô
function injectedStopper() {
  if (window.__promptAutomationInterval) {
    clearInterval(window.__promptAutomationInterval);
    window.__promptAutomationInterval = null;
    console.log("[SoraPromptAutoRunner] ‚èπÔ∏è Â∑≤ÂÅúÊ≠¢");
  } else {
    console.log("[SoraPromptAutoRunner] Ê≤íÊúâÊ≠£Âú®Âü∑Ë°åÁöÑ‰ªªÂãô");
  }
}

// ========== popup.js ‰∏ªÈÇèËºØ ==========

document.addEventListener("DOMContentLoaded", () => {
  const $ = (id) => document.getElementById(id);

  const promptsEl = $("prompts");
  const textareaXPathEl = $("textareaXPath");
  const submitXPathEl = $("submitXPath");
  const logVerboseEl = $("logVerbose");
  const startBtn = $("start");
  const stopBtn = $("stop");
  const insertExampleBtn = $("insertExample");
  const coffeeBtn = $("coffee");
  const status = $("status");

  if (!promptsEl || !textareaXPathEl || !submitXPathEl || !logVerboseEl || !startBtn || !stopBtn || !insertExampleBtn || !coffeeBtn || !status) {
    console.error("[Popup] Áº∫Â∞ëÂøÖË¶ÅÁöÑ DOM ÂÖÉÁ¥†ÔºåË´ãÊ™¢Êü• popup.html ÁöÑ id ÊòØÂê¶‰∏ÄËá¥");
    return;
  }

  // ÂàùÂßãÂåñÔºöÂæû storage ËºâÂÖ•Ë®≠ÂÆö
  (async function init() {
    try {
      const saved = await chrome.storage.local.get(["prompts", "textareaXPath", "submitXPath", "verbose"]);
      if (saved.prompts) promptsEl.value = saved.prompts;
      if (saved.textareaXPath) textareaXPathEl.value = saved.textareaXPath;
      if (saved.submitXPath) submitXPathEl.value = saved.submitXPath;
      logVerboseEl.checked = !!saved.verbose;
    } catch (e) {
      status.className = "error";
      status.textContent = `ÂàùÂßãÂåñÂ§±ÊïóÔºö${e.message}`;
    }
  })();

  // ÊèíÂÖ•ÁØÑ‰æãÊåâÈàï
  insertExampleBtn.addEventListener("click", () => {
    const examplePrompts = [
      {
        "scene": "‰∏ÄÂÄãÂØßÈùúÁöÑÊó•ÂºèÂ∫≠Èô¢ÔºåÊ´ªËä±È£ÑËêΩ",
        "shot": {
          "type": "wide shot",
          "camera_movement": "slow pan",
          "duration": "5 seconds"
        },
        "style": "cinematic, soft lighting"
      },
      {
        "scene": "Áèæ‰ª£ÈÉΩÂ∏ÇÂ§úÊôØÔºåÈúìËôπÁáàÈñÉÁàõ",
        "shot": {
          "type": "drone shot",
          "camera_movement": "rising up",
          "duration": "8 seconds"
        },
        "style": "cyberpunk, vibrant colors"
      },
      "Á∞°ÂñÆÁöÑÊñáÂ≠óÊèêÁ§∫Ë©ûÁØÑ‰æã"
    ];
    
    promptsEl.value = JSON.stringify(examplePrompts, null, 2);
    status.className = "ok";
    status.textContent = "‚úÖ Â∑≤ÊèíÂÖ•ÁØÑ‰æãÊèêÁ§∫Ë©û";
    setTimeout(() => {
      status.className = "";
      status.textContent = "";
    }, 2000);
  });

  // Start ÊåâÈàï
  startBtn.addEventListener("click", async () => {
    status.className = "";
    status.textContent = "";
    const promptsRaw = promptsEl.value.trim();
    const textareaXPath = textareaXPathEl.value.trim();
    const submitXPath = submitXPathEl.value.trim();
    const verbose = logVerboseEl.checked;

    if (!promptsRaw || !textareaXPath || !submitXPath) {
      status.className = "error";
      status.textContent = "‚ùå Ë´ãÂ°´ÈΩä Prompts ËàáÂÖ©ÂÄã XPath„ÄÇ";
      return;
    }

    let prompts;
    try {
      prompts = JSON.parse(promptsRaw);
      if (!Array.isArray(prompts)) throw new Error("prompts ‰∏çÊòØÈô£Âàó");
    } catch (e) {
      status.className = "error";
      status.textContent = `‚ùå Prompts JSON Ëß£ÊûêÂ§±ÊïóÔºö${e.message}`;
      return;
    }

    await chrome.storage.local.set({ prompts: promptsRaw, textareaXPath, submitXPath, verbose });

    const [tab] = await chrome.tabs.query({ active: true, currentWindow: true });
    if (!tab?.id) {
      status.className = "error";
      status.textContent = "‚ùå Êâæ‰∏çÂà∞ÁõÆÂâçÂàÜÈ†Å„ÄÇ";
      return;
    }

    try {
      await chrome.scripting.executeScript({
        target: { tabId: tab.id },
        func: injectedRunner,
        args: [prompts, textareaXPath, submitXPath, verbose],
        world: "MAIN"
      });
      status.className = "ok";
      status.textContent = "üöÄ Â∑≤ÂïüÂãï„ÄÇÈñãÂïüË©≤È†Å Console ËßÄÂØüÊó•Ë™å„ÄÇ";
    } catch (e) {
      status.className = "error";
      status.textContent = `‚ùå Ê≥®ÂÖ•Â§±ÊïóÔºö${e.message}`;
    }
  });

  // Stop ÊåâÈàï
  stopBtn.addEventListener("click", async () => {
    const [tab] = await chrome.tabs.query({ active: true, currentWindow: true });
    if (!tab?.id) {
      status.className = "error";
      status.textContent = "‚ùå Êâæ‰∏çÂà∞ÁõÆÂâçÂàÜÈ†Å„ÄÇ";
      return;
    }
    try {
      await chrome.scripting.executeScript({
        target: { tabId: tab.id },
        func: injectedStopper
      });
      status.className = "ok";
      status.textContent = "‚èπÔ∏è ÂÅúÊ≠¢Êåá‰ª§Â∑≤ÈÄÅÂá∫„ÄÇ";
    } catch (e) {
      status.className = "error";
      status.textContent = `‚ùå ÂÅúÊ≠¢Â§±ÊïóÔºö${e.message}`;
    }
  });

  // ÂíñÂï°ÊåâÈàï - Ë´ãÊàëÂñùÂíñÂï°
  coffeeBtn.addEventListener("click", () => {
    window.open('https://www.paypal.me/wide3751', '_blank');
  });
});
// ========== popup.js ‰∏ªÈÇèËºØ ==========